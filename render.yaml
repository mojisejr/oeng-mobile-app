services:
  - type: web
    name: oeng-app-api
    env: node
    plan: free
    buildCommand: cp package-server.json package.json && npm install --production
    startCommand: node server.js
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: NODE_OPTIONS
        value: --max-old-space-size=512
      - key: FIREBASE_API_KEY
        sync: false

      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_STORAGE_BUCKET
        sync: false
      - key: FIREBASE_MESSAGING_SENDER_ID
        sync: false
      - key: FIREBASE_APP_ID
        sync: false
      - key: FIREBASE_MEASUREMENT_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false
      - key: FIREBASE_CLIENT_ID
        sync: false
      - key: FIREBASE_TOKEN_URI
        sync: false
      - key: FIREBASE_CLIENT_X509_CERT_URL
        sync: false
      - key: GOOGLE_GENERATIVE_AI_API_KEY
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
    autoDeploy: true
    branch: main
    rootDir: .
    buildFilter:
      paths:
        - api/**
        - package.json
        - package-lock.json
        - tsconfig.json
        - firebase-admin.ts
        - render.yaml
    headers:
      - path: /api/*
        name: Access-Control-Allow-Origin
        value: "*"
      - path: /api/*
        name: Access-Control-Allow-Methods
        value: "GET, POST, PUT, DELETE, OPTIONS"
      - path: /api/*
        name: Access-Control-Allow-Headers
        value: "Content-Type, Authorization"
    
# Note: Environment variables should be configured in Render Dashboard
# This file defines the service configuration for deployment