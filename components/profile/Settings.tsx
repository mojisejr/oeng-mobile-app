import React, { useState } from 'react';
import { View, Switch, Alert } from 'react-native';
import { Settings as SettingsIcon, Globe, Bell, Palette, Info, HelpCircle } from 'lucide-react-native';

import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import { Button } from '@/components/ui/Button';
import { Card, CardContent, CardHeader } from '@/components/ui/Card';

interface SettingsProps {
  onClose?: () => void;
}

export function Settings({ onClose }: SettingsProps) {
  const [language, setLanguage] = useState<'th' | 'en'>('th');
  const [notificationsEnabled, setNotificationsEnabled] = useState(true);
  const [theme, setTheme] = useState<'light' | 'dark' | 'auto'>('auto');

  const handleLanguageChange = () => {
    const newLanguage = language === 'th' ? 'en' : 'th';
    setLanguage(newLanguage);
    Alert.alert(
      '‡∏†‡∏≤‡∏©‡∏≤ / Language',
      `‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ${newLanguage === 'th' ? '‡πÑ‡∏ó‡∏¢' : 'English'} ‡πÅ‡∏•‡πâ‡∏ß\nLanguage changed to ${newLanguage === 'th' ? 'Thai' : 'English'}`
    );
  };

  const handleNotificationToggle = () => {
    setNotificationsEnabled(!notificationsEnabled);
    Alert.alert(
      '‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
      notificationsEnabled ? '‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß' : '‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß'
    );
  };

  const handleThemeChange = () => {
    const themes: Array<'light' | 'dark' | 'auto'> = ['light', 'dark', 'auto'];
    const currentIndex = themes.indexOf(theme);
    const nextTheme = themes[(currentIndex + 1) % themes.length];
    setTheme(nextTheme);
    
    const themeNames = {
      light: '‡∏™‡∏ß‡πà‡∏≤‡∏á',
      dark: '‡∏°‡∏∑‡∏î',
      auto: '‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥'
    };
    
    Alert.alert('‡∏ò‡∏µ‡∏°', `‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ò‡∏µ‡∏°${themeNames[nextTheme]}‡πÅ‡∏•‡πâ‡∏ß`);
  };

  const handleAbout = () => {
    Alert.alert(
      '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏õ',
      'AI English Coach v1.0\n\n‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏ù‡∏∂‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏î‡πâ‡∏ß‡∏¢ AI\n‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡∏° OENG\n\n¬© 2025 All rights reserved'
    );
  };

  const handleHelp = () => {
    Alert.alert(
      '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
      '1. ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö\n2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏ö‡∏ó (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)\n3. ‡∏Å‡∏î‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏à‡∏≤‡∏Å AI\n4. ‡∏î‡∏π‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ\n\n‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô'
    );
  };

  return (
    <ThemedView className="flex-1">
      <Card variant="elevated" padding="none" className="m-4">
        <CardHeader className="pb-2">
          <View className="flex-row items-center justify-between">
            <View className="flex-row items-center">
              <SettingsIcon size={24} className="text-blue-600 mr-3" />
              <ThemedText type="subtitle" className="text-gray-900">
                ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
              </ThemedText>
            </View>
            {onClose && (
              <Button
                variant="ghost"
                size="sm"
                onPress={onClose}
                className="px-2"
              >
                <ThemedText className="text-gray-600">‡∏õ‡∏¥‡∏î</ThemedText>
              </Button>
            )}
          </View>
        </CardHeader>

        <CardContent className="space-y-4">
          {/* Language Settings */}
          <View className="space-y-3">
            <View className="flex-row items-center justify-between py-3 border-b border-gray-100">
              <View className="flex-row items-center flex-1">
                <Globe size={20} className="text-gray-600 mr-3" />
                <View className="flex-1">
                  <ThemedText type="defaultSemiBold" className="text-gray-900">
                    ‡∏†‡∏≤‡∏©‡∏≤ / Language
                  </ThemedText>
                  <ThemedText type="caption" className="text-gray-500">
                    {language === 'th' ? '‡πÑ‡∏ó‡∏¢ (Thai)' : 'English'}
                  </ThemedText>
                </View>
              </View>
              <Button
                variant="outline"
                size="sm"
                onPress={handleLanguageChange}
                className="ml-2"
              >
                <ThemedText className="text-blue-600">
                  {language === 'th' ? 'EN' : 'TH'}
                </ThemedText>
              </Button>
            </View>

            {/* Notification Settings */}
            <View className="flex-row items-center justify-between py-3 border-b border-gray-100">
              <View className="flex-row items-center flex-1">
                <Bell size={20} className="text-gray-600 mr-3" />
                <View className="flex-1">
                  <ThemedText type="defaultSemiBold" className="text-gray-900">
                    ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                  </ThemedText>
                  <ThemedText type="caption" className="text-gray-500">
                    ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏≠‡∏õ
                  </ThemedText>
                </View>
              </View>
              <Switch
                value={notificationsEnabled}
                onValueChange={handleNotificationToggle}
                trackColor={{ false: '#e5e7eb', true: '#3b82f6' }}
                thumbColor={notificationsEnabled ? '#ffffff' : '#f3f4f6'}
              />
            </View>

            {/* Theme Settings */}
            <View className="flex-row items-center justify-between py-3 border-b border-gray-100">
              <View className="flex-row items-center flex-1">
                <Palette size={20} className="text-gray-600 mr-3" />
                <View className="flex-1">
                  <ThemedText type="defaultSemiBold" className="text-gray-900">
                    ‡∏ò‡∏µ‡∏°
                  </ThemedText>
                  <ThemedText type="caption" className="text-gray-500">
                    {theme === 'light' ? '‡∏™‡∏ß‡πà‡∏≤‡∏á' : theme === 'dark' ? '‡∏°‡∏∑‡∏î' : '‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥'}
                  </ThemedText>
                </View>
              </View>
              <Button
                variant="outline"
                size="sm"
                onPress={handleThemeChange}
                className="ml-2"
              >
                <ThemedText className="text-blue-600">
                  {theme === 'light' ? '‚òÄÔ∏è' : theme === 'dark' ? 'üåô' : 'üîÑ'}
                </ThemedText>
              </Button>
            </View>
          </View>

          {/* App Information */}
          <View className="space-y-3 pt-4">
            <ThemedText type="subtitle" className="text-gray-700 mb-2">
              ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏õ
            </ThemedText>

            <Button
              variant="ghost"
              onPress={handleHelp}
              className="flex-row items-center justify-start p-3 rounded-lg"
            >
              <HelpCircle size={20} className="text-gray-600 mr-3" />
              <View className="flex-1">
                <ThemedText type="defaultSemiBold" className="text-gray-900">
                  ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                </ThemedText>
                <ThemedText type="caption" className="text-gray-500">
                  ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢
                </ThemedText>
              </View>
            </Button>

            <Button
              variant="ghost"
              onPress={handleAbout}
              className="flex-row items-center justify-start p-3 rounded-lg"
            >
              <Info size={20} className="text-gray-600 mr-3" />
              <View className="flex-1">
                <ThemedText type="defaultSemiBold" className="text-gray-900">
                  ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏õ
                </ThemedText>
                <ThemedText type="caption" className="text-gray-500">
                  ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏≠‡∏õ
                </ThemedText>
              </View>
            </Button>
          </View>
        </CardContent>
      </Card>
    </ThemedView>
  );
}

export default Settings;